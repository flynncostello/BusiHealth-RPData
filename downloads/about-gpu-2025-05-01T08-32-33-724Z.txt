Graphics Feature Status
=======================
*   Canvas: Software only. Hardware acceleration disabled
*   Direct Rendering Display Compositor: Disabled
*   Compositing: Software only. Hardware acceleration disabled
*   Multiple Raster Threads: Disabled
*   OpenGL: Disabled
*   Rasterization: Software only. Hardware acceleration disabled
*   Raw Draw: Disabled
*   Skia Graphite: Disabled
*   Video Decode: Software only. Hardware acceleration disabled
*   Video Encode: Software only. Hardware acceleration disabled
*   WebGL: Disabled
*   WebGL2: Disabled
*   WebGPU: Disabled
*   WebNN: Disabled

Version Information
===================
Data exported              : 2025-05-01T08:32:30.304Z
Chrome version             : Chrome/135.0.7049.115
Operating system           : Mac OS X 13.3.1
Software rendering list URL: https://chromium.googlesource.com/chromium/src/+/e624ba5948ffb9b6dcc98ae635ebe92ee09d242c/gpu/config/software_rendering_list.json
Driver bug list URL        : https://chromium.googlesource.com/chromium/src/+/e624ba5948ffb9b6dcc98ae635ebe92ee09d242c/gpu/config/gpu_driver_bug_list.json
ANGLE commit id            : 079266db4452
2D graphics backend        : Skia/135 5a44cdd70f04aa65fa063caa1a7e3028d75236f8
Command Line               : /Applications/Google Chrome.app/Contents/MacOS/Google Chrome --allow-pre-commit-input --disable-background-networking --disable-blink-features=AutomationControlled --disable-client-side-phishing-detection --disable-default-apps --disable-dev-shm-usage --disable-features=IsolateOrigins,site-per-process --disable-gpu --disable-hang-monitor --disable-popup-blocking --disable-prompt-on-repost --disable-software-rasterizer --disable-sync --enable-logging --enable-webgl --ignore-gpu-blocklist --log-level=0 --no-first-run --no-sandbox --no-service-autorun --password-store=basic --remote-debugging-port=0 --test-type=webdriver --use-gl=egl --use-mock-keychain --user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 --user-data-dir=/var/folders/wk/y1bxk2fn0hdfnbd907p8v9540000gn/T/.org.chromium.Chromium.DOHUYz --window-size=1920,1080 --flag-switches-begin --flag-switches-end data:,

Driver Information
==================
Initialization time             : 0
In-process GPU                  : false
Skia Backend                    : None
Passthrough Command Decoder     : true
Sandboxed                       : false
GPU0                            : VENDOR= 0x0000, DEVICE=0x0000
Optimus                         : false
AMD switchable                  : false
Pixel shader version            : 
Vertex shader version           : 
Max. MSAA samples               : 
Machine model name              : 
Machine model version           : 
GL implementation parts         : (gl=disabled,angle=none)
Display type                    : 
GL_VENDOR                       : Disabled
GL_RENDERER                     : Disabled
GL_VERSION                      : Disabled
GL_EXTENSIONS                   : 
Disabled Extensions             : GL_KHR_blend_equation_advanced GL_KHR_blend_equation_advanced_coherent
Disabled WebGL Extensions       : 
Window system binding vendor    : 
Window system binding version   : 
Window system binding extensions: 
Direct rendering version        : unknown
Reset notification strategy     : 0x0000
GPU process crash count         : 0
gfx::BufferFormats supported for allocation and texturing: R_8: not supported,  R_16: not supported,  RG_88: not supported,  RG_1616: not supported,  BGR_565: not supported,  RGBA_4444: not supported,  RGBX_8888: not supported,  RGBA_8888: not supported,  BGRX_8888: not supported,  BGRA_1010102: not supported,  RGBA_1010102: not supported,  BGRA_8888: not supported,  RGBA_F16: not supported,  YVU_420: not supported,  YUV_420_BIPLANAR: not supported,  YUVA_420_TRIPLANAR: not supported,  P010: not supported

Driver Bug Workarounds
======================
*   disable_2d_canvas_auto_flush
*   enable_webgl_timer_query_extensions
*   disabled_extension_GL_KHR_blend_equation_advanced
*   disabled_extension_GL_KHR_blend_equation_advanced_coherent

Problems Detected
=================
*   Gpu compositing has been disabled, either via blocklist, about:flags or the command line. The browser will fall back to software compositing and hardware acceleration will be unavailable.
    Disabled Features: gpu_compositing

*   GPU process was unable to boot: GPU access is disabled through commandline switch --disable-gpu and --disable-software-rasterizer.
    Disabled Features: all

*   Disable KHR_blend_equation_advanced until cc shaders are updated:
    (http://crbug.com/661715)
    Applied Workarounds: disable(GL_KHR_blend_equation_advanced),
        disable(GL_KHR_blend_equation_advanced_coherent)

*   Expose WebGL's disjoint_timer_query extensions on platforms with site isolation:
    (http://crbug.com/808744), (http://crbug.com/870491)
    Applied Workarounds: enable_webgl_timer_query_extensions

*   glFlush error on Mac:
    (http://crbug.com/841755)
    Applied Workarounds: disable_2d_canvas_auto_flush

Dawn Info
=========

<Integrated GPU>  Metal backend - Apple M2
------------------------------------------

[WebGPU Status]
---------------
*   Available

[Adapter Supported Features]
----------------------------
*   depth-clip-control
*   depth32float-stencil8
*   timestamp-query
*   texture-compression-bc
*   texture-compression-etc2
*   texture-compression-astc
*   indirect-first-instance
*   shader-f16
*   rg11b10ufloat-renderable
*   bgra8unorm-storage
*   float32filterable
*   float32blendable
*   clip-distances
*   dual-source-blending
*   subgroups
*   core-features-and-limits
*   dawn-internal-usages
*   dawn-multi-planar-formats
*   dawn-native
*   implicit-device-synchronization
*   transient-attachments
*   subgroups-f16
*   unorm16texture-formats
*   snorm16texture-formats
*   multi-planar-format-p010
*   multi-planar-render-targets
*   adapter-properties-memory-heaps
*   dawn-format-capabilities
*   norm16texture-formats
*   shared-texture-memory-io-surface
*   shared-fence-mtl-shared-event
*   shader-module-compilation-options
*   dawn-load-resolve-texture
*   flexible-texture-views

[Enabled Toggle Names]
----------------------
*   always_resolve_into_zero_level_and_layer: 
    (https://crbug.com/dawn/56):
    When the resolve target is a texture view that is created on the non-zero
    level or layer of a texture, we first resolve into a temporarily 2D
    texture with only one mipmap level and one array layer, and copy the
    result of MSAA resolve into the true resolve target. This workaround is
    enabled by default on the Metal drivers that have bugs when setting
    non-zero resolveLevel or resolveSlice. It is also enabled by default on
    Qualcomm Vulkan drivers, which have similar bugs.

*   lazy_clear_resource_on_first_use: 
    (https://crbug.com/dawn/145):
    Clears resource to zero on first usage. This initializes the resource so
    that no dirty bits from recycled memory is present in the new resource.

*   metal_enable_vertex_pulling: 
    (https://crbug.com/dawn/480):
    Uses vertex pulling to protect out-of-bounds reads on Metal

*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   disable_demote_to_helper: 
    (https://crbug.com/42250787):
    Disables the conversion of discard to demote to helper thread in the IR
    transform

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

*   metal_use_mock_blit_encoder_for_write_timestamp: 
    (https://crbug.com/dawn/1473):
    Add mock blit command to blit encoder when encoding writeTimestamp as
    workaround on Metal.This toggle is enabled by default on Metal backend
    where GPU counters cannot be stored tosampleBufferAttachments on empty
    blit encoder.

*   metal_fill_empty_occlusion_queries_with_zero: 
    (https://crbug.com/dawn/1707):
    Apple GPUs leave stale results in the visibility result buffer instead of
    writing zero if an occlusion query is empty. Workaround this by explicitly
    filling it with zero if there are no draw calls.

*   metal_serialize_timestamp_generation_and_resolution: 
    (crbug.com/372698905):
    Newer Apple GPUs can race on query set resolution with timestamp writing
    from earlier compute passes. This can be worked around by signaling and
    waiting for a shared event in between timestamp generation and resolution.

[WebGPU Required Toggles - enabled]
-----------------------------------
*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

<CPU>  Vulkan backend - SwiftShader Device (LLVM 10.0.0)
--------------------------------------------------------

[WebGPU Status]
---------------
*   Blocklisted - crbug.com/40057808: CPU adapters not fully tested or conformant.

[Adapter Supported Features]
----------------------------
*   depth-clip-control
*   depth32float-stencil8
*   timestamp-query
*   texture-compression-bc
*   texture-compression-etc2
*   texture-compression-astc
*   indirect-first-instance
*   rg11b10ufloat-renderable
*   bgra8unorm-storage
*   float32filterable
*   float32blendable
*   clip-distances
*   subgroups
*   core-features-and-limits
*   dawn-internal-usages
*   dawn-multi-planar-formats
*   dawn-native
*   implicit-device-synchronization
*   transient-attachments
*   unorm16texture-formats
*   adapter-properties-memory-heaps
*   adapter-properties-vk
*   dawn-format-capabilities
*   shared-texture-memory-opaque-fd
*   dawn-load-resolve-texture
*   flexible-texture-views

[Enabled Toggle Names]
----------------------
*   lazy_clear_resource_on_first_use: 
    (https://crbug.com/dawn/145):
    Clears resource to zero on first usage. This initializes the resource so
    that no dirty bits from recycled memory is present in the new resource.

*   use_temporary_buffer_in_texture_to_texture_copy: 
    (https://crbug.com/dawn/42):
    Split texture-to-texture copy into two copies: copy from source texture
    into a temporary buffer, and copy from the temporary buffer into the
    destination texture when copying between compressed textures that don't
    have block-aligned sizes. This workaround is enabled by default on all
    Vulkan drivers to solve an issue in the Vulkan SPEC about the
    texture-to-texture copies with compressed formats. See #1005
    (https://github.com/KhronosGroup/Vulkan-Docs/issues/1005) for more
    details.

*   vulkan_use_d32s8: 
    (https://crbug.com/dawn/286):
    Vulkan mandates support of either D32_FLOAT_S8 or D24_UNORM_S8. When
    available the backend will use D32S8 (toggle to on) but setting the toggle
    to off will make it use the D24S8 format when possible.

*   vulkan_use_s8: 
    (https://crbug.com/dawn/666):
    Vulkan has a pure stencil8 format but it is not universally available.
    When this toggle is on, the backend will use S8 for the stencil8 format,
    otherwise it will fallback to D32S8 or D24S8.

*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   vulkan_use_demote_to_helper_invocation_extension: 
    (https://crbug.com/42250787):
    Sets the use of the vulkan demote to helper extension

*   use_placeholder_fragment_in_vertex_only_pipeline: 
    (https://crbug.com/dawn/136):
    Use a placeholder empty fragment shader in vertex only render pipeline.
    This toggle must be enabled for OpenGL ES backend, the Vulkan Backend, and
    serves as a workaround by default enabled on some Metal devices with Intel
    GPU to ensure the depth result is correct.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

*   use_vulkan_zero_initialize_workgroup_memory_extension: 
    (https://crbug.com/dawn/1302):
    Initialize workgroup memory with OpConstantNull on Vulkan when the Vulkan
    extension VK_KHR_zero_initialize_workgroup_memory is supported.

[WebGPU Required Toggles - enabled]
-----------------------------------
*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

Compositor Information
======================
Tile Update Mode: Zero-copy
Partial Raster  : Enabled

GpuMemoryBuffers Status
=======================
R_8               : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
R_16              : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RG_88             : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RG_1616           : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
BGR_565           : Software only
RGBA_4444         : Software only
RGBX_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RGBA_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
BGRX_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
BGRA_1010102      : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RGBA_1010102      : Software only
BGRA_8888         : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
RGBA_F16          : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
YVU_420           : Software only
YUV_420_BIPLANAR  : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
YUVA_420_TRIPLANAR: GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING
P010              : GPU_READ, SCANOUT, SCANOUT_CPU_READ_WRITE, GPU_READ_CPU_READ_WRITE, SCANOUT_VEA_CPU_READ, SCANOUT_FRONT_RENDERING

Display(s) Information
======================
Info                          : Display[1] bounds=[0,0 1440x900], workarea=[0,25 1440x875], scale=2, rotation=0, panel_rotation=0 internal detected
Color space (SDR)             : {primaries:P3, transfer:{0.0777*x + 0.0000 if abs(x) < 0.0450 else sign(x)*((0.9495*abs(x) + 0.0495)**2.3955 + 0.0003)}, matrix:RGB, range:FULL}
Buffer format (SDR)           : BGRA_8888
Color space (HDR)             : {primaries:BT709, transfer:SRGB_HDR, matrix:RGB, range:FULL}
Buffer format (HDR)           : RGBA_F16
Color volume                  : {name:'p3', r:[0.6800, 0.3200], g:[0.2650, 0.6900], b:[0.1500, 0.0600], w:[0.3127, 0.3290]}
SDR white level in nits       : 203
HDR relative maximum luminance: 1.0625
Bits per color component      : 10
Bits per pixel                : 30
Refresh Rate in Hz            : 60.00239944458008
Info                          : Display[2] bounds=[-240,-1080 1920x1080], workarea=[-240,-1055 1920x1055], scale=1, rotation=0, panel_rotation=0 external detected
Color space (all)             : {r:[0.6639, 0.3253], g:[0.3027, 0.6454], b:[0.1425, 0.0576], w:[0.3127, 0.3290]}, transfer:BT709_APPLE, matrix:RGB, range:FULL}
Buffer format (all)           : BGRA_8888
Color volume                  : {r:[0.6639, 0.3253], g:[0.3027, 0.6454], b:[0.1425, 0.0576], w:[0.3127, 0.3290]}
SDR white level in nits       : 203
HDR relative maximum luminance: 1
Bits per color component      : 8
Bits per pixel                : 24
Refresh Rate in Hz            : 120.00000762939453

Video Acceleration Information
==============================
Decoding                      : 
Decode h264 baseline          : 64x64 to 4096x4096 pixels
Decode h264 main              : 64x64 to 4096x4096 pixels
Decode h264 extended          : 64x64 to 4096x4096 pixels
Decode h264 high              : 64x64 to 4096x4096 pixels
Decode vp9 profile0           : 64x64 to 4096x4096 pixels
Decode vp9 profile2           : 64x64 to 4096x4096 pixels
Decode hevc main              : 16x16 to 8192x8192 pixels
Decode hevc main 10           : 16x16 to 8192x8192 pixels
Decode hevc main still-picture: 16x16 to 8192x8192 pixels
Decode hevc range extensions  : 16x16 to 8192x8192 pixels
Encoding                      : 
Encode h264 baseline          : 16x16 to 4096x2304 pixels, and/or 120.000 fps.
Encode h264 baseline          : 16x16 to 2304x4096 pixels, and/or 120.000 fps.
Encode h264 baseline          : 16x16 to 4096x2304 pixels, and/or 120.000 fps (software codec).
Encode h264 baseline          : 16x16 to 2304x4096 pixels, and/or 120.000 fps (software codec).
Encode h264 main              : 16x16 to 4096x2304 pixels, and/or 120.000 fps.
Encode h264 main              : 16x16 to 2304x4096 pixels, and/or 120.000 fps.
Encode h264 main              : 16x16 to 4096x2304 pixels, and/or 120.000 fps (software codec).
Encode h264 main              : 16x16 to 2304x4096 pixels, and/or 120.000 fps (software codec).
Encode h264 high              : 16x16 to 4096x2304 pixels, and/or 120.000 fps.
Encode h264 high              : 16x16 to 2304x4096 pixels, and/or 120.000 fps.
Encode h264 high              : 16x16 to 4096x2304 pixels, and/or 120.000 fps (software codec).
Encode h264 high              : 16x16 to 2304x4096 pixels, and/or 120.000 fps (software codec).
Encode hevc main              : 16x16 to 8192x4352 pixels, and/or 120.000 fps.
Encode hevc main              : 16x16 to 4352x8192 pixels, and/or 120.000 fps.
Encode hevc main              : 16x16 to 8192x4352 pixels, and/or 120.000 fps (software codec).
Encode hevc main              : 16x16 to 4352x8192 pixels, and/or 120.000 fps (software codec).

Vulkan Information
==================

Device Performance Information
==============================

Driver Information for Hardware GPU
===================================
Initialization time             : 0
In-process GPU                  : false
Skia Backend                    : None
Passthrough Command Decoder     : true
Sandboxed                       : false
GPU0                            : VENDOR= 0x0000, DEVICE=0x0000
Optimus                         : false
AMD switchable                  : false
Pixel shader version            : 
Vertex shader version           : 
Max. MSAA samples               : 
Machine model name              : 
Machine model version           : 
GL implementation parts         : (gl=disabled,angle=none)
Display type                    : 
GL_VENDOR                       : Disabled
GL_RENDERER                     : Disabled
GL_VERSION                      : Disabled
GL_EXTENSIONS                   : 
Disabled Extensions             : 
Disabled WebGL Extensions       : 
Window system binding vendor    : 
Window system binding version   : 
Window system binding extensions: 
Direct rendering version        : unknown
Reset notification strategy     : 0x0000
GPU process crash count         : 0
gfx::BufferFormats supported for allocation and texturing: R_8: not supported,  R_16: not supported,  RG_88: not supported,  RG_1616: not supported,  BGR_565: not supported,  RGBA_4444: not supported,  RGBX_8888: not supported,  RGBA_8888: not supported,  BGRX_8888: not supported,  BGRA_1010102: not supported,  RGBA_1010102: not supported,  BGRA_8888: not supported,  RGBA_F16: not supported,  YVU_420: not supported,  YUV_420_BIPLANAR: not supported,  YUVA_420_TRIPLANAR: not supported,  P010: not supported

Graphics Feature Status for Hardware GPU
========================================
*   Canvas: Software only. Hardware acceleration disabled
*   Direct Rendering Display Compositor: Disabled
*   Compositing: Software only. Hardware acceleration disabled
*   Multiple Raster Threads: Disabled
*   OpenGL: Disabled
*   Rasterization: Software only. Hardware acceleration disabled
*   Raw Draw: Disabled
*   Skia Graphite: Disabled
*   Video Decode: Software only. Hardware acceleration disabled
*   Video Encode: Software only. Hardware acceleration disabled
*   WebGL: Disabled
*   WebGL2: Disabled
*   WebGPU: Disabled
*   WebNN: Disabled

Problems Detected for Hardware GPU
==================================
*   WebGPU has been disabled via blocklist or the command line.
    Disabled Features: webgpu

*   WebGL2 has been disabled via blocklist or the command line.
    Disabled Features: webgl2

*   Accelerated rasterization has been disabled, either via blocklist, about:flags or the command line.
    Disabled Features: rasterization

*   Accelerated video encode has been disabled, either via blocklist, about:flags or the command line.
    Disabled Features: video_encode

*   Accelerated video decode has been disabled, either via blocklist, about:flags or the command line.
    Disabled Features: video_decode

*   WebGL has been disabled via blocklist or the command line.
    Disabled Features: webgl

*   Gpu compositing has been disabled, either via blocklist, about:flags or the command line. The browser will fall back to software compositing and hardware acceleration will be unavailable.
    Disabled Features: gpu_compositing

*   Accelerated 2D canvas is unavailable: either disabled via blocklist or the command line.
    Disabled Features: 2d_canvas

*   GPU process was unable to boot: GPU access is disabled through commandline switch --disable-gpu and --disable-software-rasterizer.
    Disabled Features: all

Log Messages
============